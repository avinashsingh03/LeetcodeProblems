class Bank {
public:
    int AccHolders;
    vector<long long> balance;
    Bank(vector<long long>& balance) {
        AccHolders=balance.size();
        this->balance=balance;
    }
    
    bool transfer(int account1, int account2, long long money) {
        if(account1<=AccHolders && account2<=AccHolders ){
            if(money<=balance[account1-1]){
                balance[account1-1]-=money;
                balance[account2-1]+=money;
                return true;
            }
            else{
                return false;
            }
        }
        return false;
        
    }
    
    bool deposit(int account, long long money) {
        if(account<=AccHolders){
            balance[account-1]+=money;
            return true;
        }
        return false;
        
    }
    
    bool withdraw(int account, long long money) {
        if(account<=AccHolders && money<=balance[account-1]){
            balance[account-1]-=money;
            return true;
        }
        return false;
    }
};

//by self
/**
 * Your Bank object will be instantiated and called as such:
 * Bank* obj = new Bank(balance);
 * bool param_1 = obj->transfer(account1,account2,money);
 * bool param_2 = obj->deposit(account,money);
 * bool param_3 = obj->withdraw(account,money);
 */
