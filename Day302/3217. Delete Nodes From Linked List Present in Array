/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* modifiedList(vector<int>& nums, ListNode* head) {
        set<int> num;
        int count=1;
        for(auto val:nums){
            num.insert(val);
        }
        
        ListNode* temp=head;
        ListNode* prev=NULL;
        while(temp!=NULL){
            if(num.find(temp->val)!=num.end() && count==1){ //deleting first node
                head=head->next;
                temp=head;
            }
            else if(num.find(temp->val)!=num.end() && count>1){ //deleting other than first node
                prev->next=temp->next;
                temp=temp->next;
            }
            else{  //traversing through list
                prev=temp;
                temp=temp->next;
                count++;
            }
        }
        
        return head; 
    }
};
//by self
