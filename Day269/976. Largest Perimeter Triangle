class Solution {
public:
    int largestPerimeter(vector<int>& nums) {
        int n=nums.size();
        sort(nums.begin(),nums.end());

        // //brute-force approach
        // int perimeter=0;
        // for(int i=0;i<n-2;i++){
        //     for(int j=i+1;j<n-1;j++){
        //         for(int k=j+1;k<n;k++){
        //             if(nums[i]+nums[j]>nums[k]){
        //                 perimeter=max(perimeter,nums[i]+nums[j]+nums[k]);
        //             }
        //         }
        //     }
        // }
        // return perimeter;

        //greedy approach
        for(int i=n-1;i>=2;i--){
            if((nums[i-1]+nums[i-2])>nums[i]){
                return (nums[i]+nums[i-1]+nums[i-2]);
            }
        }
        return 0;      
    }
};
